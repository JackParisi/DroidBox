apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.github.ben-manes.versions'

group='com.github.giacomoParisi'

android {
    compileSdkVersion android_config.compileSdk
    defaultConfig {
        minSdkVersion android_config.minSdk
        targetSdkVersion android_config.targetSdk
        versionCode app_config.versionCode
        versionName app_config.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions{
        javaMaxHeapSize= "4g"
    }
    buildToolsVersion '27.0.3'
}

// DEPS VERSION CHECK (https://github.com/ben-manes/gradle-versions-plugin)
dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    /* CORE */
    implementation core.kotlinStdlib
    kapt core.dataBinding
    api core.rxJava
    api core.rxAndroid

    /* ARCH */
    kapt arch.lifecycleCompiler
    implementation arch.lifecycleExtension

    /* SUPPORT */
    implementation support.appCompact
    implementation support.recyclerView
    implementation support.design

    /* GOOGLE */
    implementation google.firebaseCrash
    implementation google.daggerRuntime
    implementation google.daggerAndroid
    implementation google.daggerAndroidSupport
    kapt google.daggerAndroidSupportCompiler
    kapt google.daggerCompiler

    /* NETWORKING */
    implementation network.retrofit

    /* RESOURCES */
    api res.glide
    kapt res.glideCompiler

    /* LOGGING */
    implementation log.timber

    /* TEST */
    androidTestImplementation(test.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation test.junit
}


